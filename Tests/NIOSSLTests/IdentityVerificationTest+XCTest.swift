//===----------------------------------------------------------------------===//
//
// This source file is part of the SwiftNIO open source project
//
// Copyright (c) 2017-2018 Apple Inc. and the SwiftNIO project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of SwiftNIO project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//
//
// IdentityVerificationTest+XCTest.swift
//
import XCTest

///
/// NOTE: This file was generated by generate_linux_tests.rb
///
/// Do NOT edit this file directly as it will be regenerated automatically when needed.
///

extension IdentityVerificationTest {

   static var allTests : [(String, (IdentityVerificationTest) -> () throws -> Void)] {
      return [
                ("testCanValidateHostnameInFirstSan", testCanValidateHostnameInFirstSan),
                ("testCanValidateHostnameInSecondSan", testCanValidateHostnameInSecondSan),
                ("testIgnoresTrailingPeriod", testIgnoresTrailingPeriod),
                ("testLowercasesHostnameForSan", testLowercasesHostnameForSan),
                ("testRejectsIncorrectHostname", testRejectsIncorrectHostname),
                ("testAcceptsIpv4Address", testAcceptsIpv4Address),
                ("testAcceptsIpv6Address", testAcceptsIpv6Address),
                ("testRejectsIncorrectIpv4Address", testRejectsIncorrectIpv4Address),
                ("testRejectsIncorrectIpv6Address", testRejectsIncorrectIpv6Address),
                ("testAcceptsWildcards", testAcceptsWildcards),
                ("testAcceptsSuffixWildcard", testAcceptsSuffixWildcard),
                ("testAcceptsPrefixWildcard", testAcceptsPrefixWildcard),
                ("testAcceptsInfixWildcard", testAcceptsInfixWildcard),
                ("testIgnoresTrailingPeriodInCert", testIgnoresTrailingPeriodInCert),
                ("testRejectsEncodedIDNALabel", testRejectsEncodedIDNALabel),
                ("testMatchesUnencodedIDNALabel", testMatchesUnencodedIDNALabel),
                ("testDoesNotMatchIDNALabelWithWildcard", testDoesNotMatchIDNALabelWithWildcard),
                ("testDoesNotMatchNonLeftmostWildcards", testDoesNotMatchNonLeftmostWildcards),
                ("testDoesNotMatchMultipleWildcards", testDoesNotMatchMultipleWildcards),
                ("testRejectsWildcardBeforeUnencodedIDNALabel", testRejectsWildcardBeforeUnencodedIDNALabel),
                ("testMatchesWildcardBeforeEncodedIDNALabel", testMatchesWildcardBeforeEncodedIDNALabel),
                ("testDoesNotMatchSANWithEmbeddedNULL", testDoesNotMatchSANWithEmbeddedNULL),
                ("testFallsBackToCommonName", testFallsBackToCommonName),
                ("testLowercasesForCommonName", testLowercasesForCommonName),
                ("testRejectsUnicodeCommonNameWithUnencodedIDNALabel", testRejectsUnicodeCommonNameWithUnencodedIDNALabel),
                ("testRejectsUnicodeCommonNameWithEncodedIDNALabel", testRejectsUnicodeCommonNameWithEncodedIDNALabel),
                ("testHandlesMissingCommonName", testHandlesMissingCommonName),
                ("testDoesNotFallBackToCNWithSans", testDoesNotFallBackToCNWithSans),
           ]
   }
}

