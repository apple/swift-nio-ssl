//===----------------------------------------------------------------------===//
//
// This source file is part of the SwiftNIO open source project
//
// Copyright (c) 2017-2018 Apple Inc. and the SwiftNIO project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of SwiftNIO project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//
//
// SSLPrivateKeyTests+XCTest.swift
//
import XCTest

///
/// NOTE: This file was generated by generate_linux_tests.rb
///
/// Do NOT edit this file directly as it will be regenerated automatically when needed.
///

extension SSLPrivateKeyTest {

   static var allTests : [(String, (SSLPrivateKeyTest) -> () throws -> Void)] {
      return [
                ("testLoadingPemKeyFromFile", testLoadingPemKeyFromFile),
                ("testLoadingDerKeyFromFile", testLoadingDerKeyFromFile),
                ("testDerAndPemAreIdentical", testDerAndPemAreIdentical),
                ("testLoadingPemKeyFromMemory", testLoadingPemKeyFromMemory),
                ("testLoadingDerKeyFromMemory", testLoadingDerKeyFromMemory),
                ("testLoadingGibberishFromMemoryAsPemFails", testLoadingGibberishFromMemoryAsPemFails),
                ("testLoadingGibberishFromMemoryAsDerFails", testLoadingGibberishFromMemoryAsDerFails),
                ("testLoadingGibberishFromFileAsPemFails", testLoadingGibberishFromFileAsPemFails),
                ("testLoadingGibberishFromFileAsDerFails", testLoadingGibberishFromFileAsDerFails),
                ("testLoadingNonexistentFileAsPem", testLoadingNonexistentFileAsPem),
                ("testLoadingNonexistentFileAsDer", testLoadingNonexistentFileAsDer),
                ("testLoadingNonexistentFileAsPemWithPassphrase", testLoadingNonexistentFileAsPemWithPassphrase),
                ("testLoadingNonexistentFileAsDerWithPassphrase", testLoadingNonexistentFileAsDerWithPassphrase),
                ("testLoadingEncryptedRSAKeyFromMemory", testLoadingEncryptedRSAKeyFromMemory),
                ("testLoadingEncryptedRSAPKCS8KeyFromMemory", testLoadingEncryptedRSAPKCS8KeyFromMemory),
                ("testLoadingEncryptedRSAKeyFromFile", testLoadingEncryptedRSAKeyFromFile),
                ("testLoadingEncryptedRSAPKCS8KeyFromFile", testLoadingEncryptedRSAPKCS8KeyFromFile),
                ("testWildlyOverlongPassphraseRSAFromMemory", testWildlyOverlongPassphraseRSAFromMemory),
                ("testWildlyOverlongPassphrasePKCS8FromMemory", testWildlyOverlongPassphrasePKCS8FromMemory),
                ("testWildlyOverlongPassphraseRSAFromFile", testWildlyOverlongPassphraseRSAFromFile),
                ("testWildlyOverlongPassphrasePKCS8FromFile", testWildlyOverlongPassphrasePKCS8FromFile),
                ("testThrowingPassphraseCallback", testThrowingPassphraseCallback),
           ]
   }
}

